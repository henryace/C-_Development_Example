==========================================================================
    Visual Studio Team System：創作和執行測試的概述        
==========================================================================

此概述描述在 Visual Studio Team System 和 Visual Studio Team Edition for Software Testers 中創作和執行測試的特點。

打開測試
-------------
若要打開一個測試，請打開一個測試項目或包含測試定義的測試元資料文件（帶有 .vsmdi 擴展名的文件）。您可以在解決方案資源管理器中搜尋測試項目和元資料文件。

查看測試
-------------
若要查看哪些測試是可用的，請打開「測試檢視」視窗。或者，如果您已安裝 Team Edition for Software Testers，則也可以透過打開「測試列表編輯器」視窗來查看測試。

若要打開「測試檢視」視窗，請單擊「測試」功能表，指向「視窗」，然後單擊「測試檢視」。若要打開「測試列表編輯器」視窗（如果已安裝 Team Edition for Software Testers），請單擊「測試」，指向「視窗」，然後單擊「測試列表編輯器」。

執行測試
-------------
您可以從「測試檢視」視窗和「測試列表編輯器」視窗中執行測試。請參見「查看測試」部分以瞭解如何打開這些視窗。若要執行「測試檢視」視窗中顯示的一個或多個測試，應首先在該視窗中選擇相應的測試；若要選擇多個測試，請在按住 Shift 或 Ctrl 鍵的同時單擊相應的測試。然後在「測試檢視」視窗工具欄中單擊「執行測試」按鈕。

如果已安裝 Visual Studio Team Edition for Software Testers，則也可以使用「測試列表編輯器」視窗來執行測試。若要在測試列表編輯器中執行測試，請選中您要執行的每個測試旁邊的復選框。然後在「測試列表編輯器」視窗的工具欄中單擊「執行測試」按鈕。

查看測試結果
--------------------
當您執行一個測試或一系列測試時，測試的結果將在「測試結果」視窗中顯示。執行中的每一個測試都在一個單獨的行上顯示，這樣您就可以查看其狀態。該視窗包含一個位於視窗上半部的嵌入式狀態欄，此狀態欄提供了整個測試執行摘要的詳細訊息。

若要查看特定測試結果的更多詳細結果，請在「測試結果」視窗中雙擊它。這將打開一個視窗，其中提供有關特定測試結果的更多訊息，例如由測試返回的任何特定錯誤消息。

更改測試的執行方式
-----------------------------------
每次當您執行一個或多個測試時，都會使用一個設定集合來確定如何執行那些測試。這些設定都包含在一個「測試執行設定」文件中。

此處是您可以對測試執行設定文件進行的更改的不完全列表：

 - 更改每個測試執行的命名方案。
 - 更改為實現遠程執行測試而在執行測試時使用的測試控制器。
 - 收集所測試程式碼的程式碼覆蓋率資料，以便您可以查看測試覆蓋了哪些程式碼行。
 - 啟用和禁用測試部署。
 - 指定在測試執行前要進行部署的附加文件。
 - 選擇一個不同的宿主 ASP.NET 來執行 ASP.NET 單元測試。
 - 選擇一個不同的宿主（即智能設備測試宿主）來執行智能設備單元測試。
 - 為執行測試的測試代理設定各種屬性。
 - 在每個測試執行的開始和結束的時候執行自定義腳本，以便您在每次執行測試時都能夠按要求準確地設定測試環境。
 - 為測試和測試執行設定時間限制。
 - 設定瀏覽器組合和在測試執行中重複 Web 測試的次數。

默認情況下，只要建立一個新的測試項目，就會建立一個測試執行設定文件。可以透過以下方式更改此文件：在解決方案資源管理器中雙擊它，然後更改文件中的設定。（測試執行設定文件的擴展名為 .testrunconfig。）

一個解決方案可以包含多個測試執行設定文件。在那些文件中，只有一個「活動」測試執行設定文件將用來確定當前用於測試執行的設定。透過單擊「測試」功能表上的「選擇活動測試執行設定」可以選擇活動測試執行設定。

-------------------------------------------------------------------------------

測試類型
----------
透過使用 Visual Studio Team Edition for Software Testers，可以建立許多不同的測試類型：

單元測試：使用單元測試可以建立用 C++、Visual C# 或 Visual Basic 編寫的、演練源程式碼的編程測試。單元測試可調用類的方法，傳遞合適的參數，並驗證返回值是否為所期望的值。
單元測試有三種專用變體：
 - 當您將單元測試設定為針對資料源的每一行反覆調用時，將建立資料驅動的單元測試。每一行中的資料都將由單元測試用作輸入資料。
 - ASP.NET 單元測試是演練 ASP.NET Web 應用程式中的程式碼的單元測試。智能設備單元測試是部署到智能設備或仿真程式然後由智能設備測試宿主執行的單元測試。

Web 測試：Web 測試是由一系列有序的 HTTP 請求組成的，這些請求是使用 Microsoft Internet Explorer 在一個瀏覽器會話中記錄下來的。您可以獲得有關它所請求的頁或站點的測試報告特定詳細訊息，例如某個特定頁是否包含指定字符串。

負載測試：使用負載測試封裝非手動測試，例如單元測試、Web 測試和一般測試，然後透過使用虛擬用戶同時執行它們。在負載下執行這些測試將產生測試結果，包括用表格和圖形方式顯示的性能計數器或其他計數器。

一般測試：一般測試是經過包裝後在 Visual Studio 中用作測試的現有程式。下面是一些可以將其變成一般測試的測試或程式的例子：
 - 使用進程退出程式碼來通知測試是透過還是失敗的現有測試。0 表示測試透過，而任何其他值則表示測試失敗。
 - 在測試方案期間用來獲得特定功能的一般程式。
 - 使用特殊的 XML 文件（稱為「摘要結果文件」）來通報詳細結果的測試或程式。

手動測試：當測試任務將由測試工程師（而非使用自動腳本）完成時，使用手動測試類型。

順序測試：使用順序測試可按照您指定的順序來執行一組測試。

-------------------------------------------------------------------------------

